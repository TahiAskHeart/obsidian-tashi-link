/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => TashiLink
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DEFAULT_SETTINGS = {
  //启用锚链接
  enableCreateAnchorLink: true,
  //启用锚引用，默认不启用
  enableCreateAnchorQuote: false,
  //启用块链接
  enableCreateBlockLink: true,
  //启用块引用，默认不启用	
  enableCreateBlockQuote: false
};
var TashiLink = class extends import_obsidian.Plugin {
  async onload() {
    console.log("\u52A0\u8F7D\u63D2\u4EF6");
    await this.loadSettings();
    this.CreateAnchorLink();
    this.CreateAnchorQuote();
    this.CreateBlockLink();
    this.CreateBlockQuote();
    this.addSettingTab(new TashiLinkSettingTab(this.app, this));
  }
  onunload() {
    console.log("\u5378\u8F7D\u63D2\u4EF6");
    if (this.createAnchorLinkListener) {
      this.app.workspace.off("editor-menu", this.createAnchorLinkListener);
    }
    if (this.createAnchorQuoteListener) {
      this.app.workspace.off("editor-menu", this.createAnchorQuoteListener);
    }
    if (this.createBlockLinkListener) {
      this.app.workspace.off("editor-menu", this.createBlockLinkListener);
    }
    if (this.createBlockQuoteListener) {
      this.app.workspace.off("editor-menu", this.createBlockQuoteListener);
    }
  }
  //加载设置
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  //保存设置
  async saveSettings() {
    await this.saveData(this.settings);
  }
  //创建锚链接
  CreateAnchorLink() {
    this.createAnchorLinkListener = (menu, editor) => {
      if (editor.getSelection() && this.settings.enableCreateAnchorLink) {
        const selected\u6587\u672C = editor.getSelection();
        const replace\u6587\u672C = `[[##${selected\u6587\u672C}|${selected\u6587\u672C}]]`;
        menu.addItem((item) => {
          item.setTitle(`\u521B\u5EFA\u951A\u94FE\u63A5 [[## \u6587\u672C|\u522B\u540D]]`).setIcon("link").onClick(() => {
            editor.replaceSelection(replace\u6587\u672C);
            const cursorPosition = editor.getCursor();
            editor.setCursor({ line: cursorPosition.line, ch: cursorPosition.ch - selected\u6587\u672C.length - 3 });
          });
        });
      }
    };
    this.app.workspace.on("editor-menu", this.createAnchorLinkListener);
  }
  //创建锚引用
  CreateAnchorQuote() {
    this.createAnchorQuoteListener = (menu, editor) => {
      if (editor.getSelection() && this.settings.enableCreateAnchorQuote) {
        const selected\u6587\u672C = editor.getSelection();
        const replace\u6587\u672C = `![[##${selected\u6587\u672C}]]`;
        menu.addItem((item) => {
          item.setTitle(`\u521B\u5EFA\u951A\u5F15\u7528 ![[## \u6587\u672C]]`).setIcon("link-2").onClick(() => {
            editor.replaceSelection(replace\u6587\u672C);
            const cursorPosition = editor.getCursor();
            editor.setCursor({ line: cursorPosition.line, ch: cursorPosition.ch - selected\u6587\u672C.length });
          });
        });
      }
    };
    this.app.workspace.on("editor-menu", this.createAnchorQuoteListener);
  }
  //创建块链接
  CreateBlockLink() {
    this.createBlockLinkListener = (menu, editor) => {
      if (editor.getSelection() && this.settings.enableCreateBlockLink) {
        const selected\u6587\u672C = editor.getSelection();
        const replace\u6587\u672C = `[[^^${selected\u6587\u672C}|${selected\u6587\u672C}]]`;
        menu.addItem((item) => {
          item.setTitle(`\u521B\u5EFA\u5757\u94FE\u63A5 [[^^ \u6587\u672C|\u522B\u540D]]`).setIcon("link").onClick(() => {
            editor.replaceSelection(replace\u6587\u672C);
            const cursorPosition = editor.getCursor();
            editor.setCursor({ line: cursorPosition.line, ch: cursorPosition.ch - selected\u6587\u672C.length - 3 });
          });
        });
      }
    };
    this.app.workspace.on("editor-menu", this.createBlockLinkListener);
  }
  //创建块引用
  CreateBlockQuote() {
    this.createBlockQuoteListener = (menu, editor) => {
      if (editor.getSelection() && this.settings.enableCreateBlockQuote) {
        const selected\u6587\u672C = editor.getSelection();
        const replace\u6587\u672C = `![[^^${selected\u6587\u672C}]]`;
        menu.addItem((item) => {
          item.setTitle(`\u521B\u5EFA\u5757\u5F15\u7528 ![[^^ \u6587\u672C]]`).setIcon("link-2").onClick(() => {
            editor.replaceSelection(replace\u6587\u672C);
            const cursorPosition = editor.getCursor();
            editor.setCursor({ line: cursorPosition.line, ch: cursorPosition.ch - selected\u6587\u672C.length });
          });
        });
      }
    };
    this.app.workspace.on("editor-menu", this.createBlockQuoteListener);
  }
};
var TashiLinkSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("\u521B\u5EFA\u951A\u94FE\u63A5 [[## \u6587\u672C|\u522B\u540D]]").setDesc("\u542F\u7528 \u521B\u5EFA\u951A\u94FE\u63A5\uFF0C\u70B9\u51FB\u540E\u6309\u7A7A\u683C\u9009\u62E9\u76F8\u5173\u5185\u5BB9\u3002").addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.enableCreateAnchorLink).onChange(async (value) => {
        this.plugin.settings.enableCreateAnchorLink = value;
        await this.plugin.saveSettings();
        this.display();
      })
    );
    new import_obsidian.Setting(containerEl).setName("\u521B\u5EFA\u951A\u5F15\u7528 ![[## \u6587\u672C]]").setDesc("\u542F\u7528 \u521B\u5EFA\u951A\u5F15\u7528\uFF0C\u70B9\u51FB\u540E\u6309\u7A7A\u683C\u9009\u62E9\u76F8\u5173\u5185\u5BB9\u3002").addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.enableCreateAnchorQuote).onChange(async (value) => {
        this.plugin.settings.enableCreateAnchorQuote = value;
        await this.plugin.saveSettings();
        this.display();
      })
    );
    new import_obsidian.Setting(containerEl).setName("\u521B\u5EFA\u5757\u94FE\u63A5 [[^^ \u6587\u672C|\u522B\u540D]]").setDesc("\u542F\u7528 \u521B\u5EFA\u5757\u94FE\u63A5\uFF0C\u70B9\u51FB\u540E\u6309\u7A7A\u683C\u9009\u62E9\u76F8\u5173\u5185\u5BB9\u3002").addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.enableCreateBlockLink).onChange(async (value) => {
        this.plugin.settings.enableCreateBlockLink = value;
        await this.plugin.saveSettings();
        this.display();
      })
    );
    new import_obsidian.Setting(containerEl).setName("\u521B\u5EFA\u5757\u5F15\u7528 ![[^^ \u6587\u672C]]").setDesc("\u542F\u7528 \u521B\u5EFA\u5757\u5F15\u7528\uFF0C\u70B9\u51FB\u540E\u6309\u7A7A\u683C\u9009\u62E9\u76F8\u5173\u5185\u5BB9\u3002").addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.enableCreateBlockQuote).onChange(async (value) => {
        this.plugin.settings.enableCreateBlockQuote = value;
        await this.plugin.saveSettings();
        this.display();
      })
    );
  }
};
//# sourceMappingURL=data:application/json;base64,
